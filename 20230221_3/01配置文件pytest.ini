## [ini配置文件](https://mp.weixin.qq.com/s?__biz=MzI5ODU1MzkwMA==&mid=2247484915&idx=1&sn=1a4c0aa428e108b2b584e80a7947a303&chksm=eca542b0dbd2cba6082ec88de5f7c27614c57d61c06a30f58d9603a31da58c7a3a3de1e9dcc7&cur_album_id=1500392973518323716&scene=189#wechat_redirect)

### pytest里面有些文件是非test文件

1. pytest.ini pytest的主配置文件，可以改变pytest的默认行为
2. conftest.py 测试用例的一些fixture配置
3. _init_.py 识别该文件夹为python的package包
4. tox.ini 与pytest.ini类似，用tox工具时候才有用
5. setup.cfg 也是ini格式文件，影响setup.py的行为

### 配置文件如何放

一般一个工程下方一个pytest.ini文件就可以了，放到顶层文件夹下


### markers
有时候标签多了，不容易记住，为了方便后续执行指令的时候能准确使用mark的标签，可以写入到pytest.ini文件

    [pytest]
    
    markers =
      webtest:  Run the webtest case
      hello: Run the hello case
标记好之后，可以使用`pytest --markers`查看到
![](.01配置文件pytest.ini_images/ce1e4d18.png)


### 禁用xpass

设置`xfail_strict = true`可以让那些标记为`@pytest.mark.xfail`但实际通过的测试用例被报告为失败

什么叫标记为@pytest.mark.xfail但实际通过，这个比较绕脑，看以下案例

    # content of test_xpass.py
    import pytest
    
    def test_hello():
        print("hello world!")
        assert 1
    
    @pytest.mark.xfail()
    def test_yoyo1():
        a = "hello"
        b = "hello world"
        assert a == b
    
    @pytest.mark.xfail()
    def test_yoyo2():
        a = "hello"
        b = "hello world"
        assert a != b
    
    if __name__ == "__main__":
        pytest.main(["-v", "test_xpass.py"])
测试结果

    collecting ... collected 3 items
    
    test_xpass.py::test_hello PASSED    [ 33%]
    test_xpass.py::test_yoyo1 xfail     [ 66%]
    test_xpass.py::test_yoyo2 XPASS     [100%]
    
    =============== 1 passed, 1 xfailed, 1 xpassed in 0.27 seconds ================
test_yoyo1和test_yoyo2这2个用例一个是a == b一个是a != b,两个都标记失败了，我们希望两个用例不用执行全部显示xfail。实际上最后一个却显示xpass.为了让两个都显示xfail，那就加个配置
xfail_strict = true

    # pytest.ini
    [pytest]
    
    markers =
      webtest:  Run the webtest case
      hello: Run the hello case
    
    xfail_strict = true
再次运行，结果就变成

    collecting ... collected 3 items
    
    test_xpass.py::test_hello PASSED        [ 33%]
    test_xpass.py::test_yoyo1 xfail         [ 66%]
    test_xpass.py::test_yoyo2 FAILED        [100%]
    
    ================================== FAILURES ===================================
    _________________________________ test_yoyo2 __________________________________
    [XPASS(strict)] 
    ================ 1 failed, 1 passed, 1 xfailed in 0.05 seconds ================
这样标记为xpass的就被强制性变成failed的结果


### addopts

addopts参数可以更改默认命令行选项，这个当我们在cmd输入指令去执行用例的时候，会用到，比如我想测试完生成报告，指令比较长

    pytest -v —rerun 1 —html=report.html —self-contained-html

每次输入这么多，不太好记住，于是可以加到pytest.ini里

    # pytest.ini
    [pytest]
    
    markers =
      webtest:  Run the webtest case
      hello: Run the hello case
    
    xfail_strict = true
    
    addopts = -v --rerun 1 --html=report.html --self-contained-html
这样我下次打开cmd，直接输入pytest，它就能默认带上这些参数了