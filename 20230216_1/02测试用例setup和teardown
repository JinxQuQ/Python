https://mp.weixin.qq.com/s?__biz=MzI5ODU1MzkwMA==&mid=2247484838&idx=1&sn=ffb899660f1105f3299a7b7b4afa8043&chksm=eca542e5dbd2cbf3eaffa15ed837aadbeb43247ee1ebdcdc41b38533cab761cb5e90cee0da29&cur_album_id=1500392973518323716&scene=189#wechat_redirect
## 前言

学过unittest的都知道里面用前置和后置setup和teardown非常好用，在每次用例开始前和结束后都去执行一次。\
当然还有更高级一点的setupClass和teardownClass，需配合@classmethod装饰器一起使用，在做selenium自动化的时候，它的效率尤为突然，可以只启动一次浏览器执行多个用例。\
pytest框架也有类似于setup和teardown的语法，并且还不止这四个。

* setup：在测试函数或类之前执行，完成准备工作，例如数据库链接、测试数据、打开文件等。
* teardown：在测试函数或类之后执行，完成收尾工作，例如断开数据库链接、回收内存资源等。

## 用例运行级别
1. 模块级（setup_module/teardown_module）开始于模块始末，全局的
2. 函数级（setup_function/teardown_function）只对函数用例生效（不在类中）
3. 类级（setup_class/teardown_class）只在类中前后运行一次(在类中)
4. 方法级（setup_method/teardown_method）开始于方法始末（在类中）
5. 类里面的（setup/teardown）运行在调用方法的前后

## 函数式 -- setup_function/teardown_function
1.pytest框架支持函数和类两种用例方式，先看函数里面的前置与后置用法：

### **_setup_function/teardown_function  每个用例开始和结束调用一次_**
**_例如：test_fixt_setup_function.py_**
![](.05测试用例setup和teardown_images/7dc399b5.png)
从结果可以看出用例执行顺序：setup_function→用例1→teardown_function， setup_function→用例2→teardown_function， setup_function→用例3→teardown_function

### setup_module是所有用例开始前只执行一次，teardown_module是所有用例结束后只执行一次
**_例如：test_fixt_setup_module.py_**
![](.02测试用例setup和teardown_images/fae6110b.png)
setup_function/teardown_function和setup_module/teardown_module这四种方法是可以任意组合的，用一个和多个都可以

### setup/teardown和unittest里面的setup/teardown是一样的功能，setup_class和teardown_class等价于unittest里面的setupClass和teardownClass
**例如：test_fixtClass.py**
![](.02测试用例setup和teardown_images/a0c25d88.png)

从结果看出，运行的优先级：setup_class》setup_method》setup 》用例》teardown》teardown_method》teardown_class

_备注：这里setup_method和teardown_method的功能和setup/teardown功能是一样的，一般二者用其中一个即可_

## 函数和类混合